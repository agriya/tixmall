{
    "swagger": "2.0",
    "info": {
        "title": "Tixmall API endpoint",
        "description": "Tixmall API endpoint",
        "contact": {
            "name": "Agriya Infoway",
            "url": "http://www.agriya.com",
            "email": "info@agriya.com"
        },
        "license": {
            "name": "Agriya Infoway Licence",
            "url": "http://www.agriya.com/"
        },
        "version": "v1.0b1"
    },
    "produces": [
        "application/json"
    ],
    "paths": {
        "/oauth/token": {
            "get": {
                "summary": "Get site token",
                "description": "Get site token",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Site token"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/oauth/refresh_token": {
            "get": {
                "summary": "Get site refresh token",
                "description": "Get site refresh token",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Refresh site token"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "summary": "User Logout",
                "description": "Logout user records fetch.\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Logout user"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "summary": "new user",
                "description": "Post new user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Post new user fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "New user registered successfully.",
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "summary": "User login",
                "description": "User login information post",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User login information post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User login posted successfully",
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/forgot_password": {
            "post": {
                "summary": "Enter your Email, and we will send resetting your password.",
                "description": "Enter your Email, and we will send resetting your password.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created Forgot Password object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forgotUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User Forgot password updated successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Filter  users.",
                "description": "Filter users.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Filter users.",
                        "schema": {
                            "$ref": "#/definitions/usersList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User added successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "summary": "Get user by its id.",
                "description": "Get user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Get user.",
                        "schema": {
                            "$ref": "#/definitions/usersList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user by its id.",
                "description": "Update user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Update user Details.",
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "DELETE user by its id.",
                "description": "DELETE user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "delete by userId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "DELETE user.",
                        "schema": {
                            "$ref": "#/definitions/deleteUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/change_password": {
            "put": {
                "summary": "Chang password of user",
                "description": "Change password of the particlular user. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Change password user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Change password user fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/changePasswordUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Change password of the user updated sucessfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/changePasswordUser"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/activation/{hash}": {
            "put": {
                "summary": "User activation",
                "description": "Send activation hash code to user for activation. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "user send activation request",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "user send activation hash code request",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User send activation successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/activateUser"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/user_addresses": {
            "post": {
                "summary": "User address",
                "description": "User add address",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Get user address by userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User add address",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserAddress"
                        }
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "User added address successfully",
                        "schema": {
                            "$ref": "#/definitions/addUserAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get user address book details",
                "description": "Get user address book details. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Get user address by userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "An array of the user address details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAddress"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/user_addresses/{userAddressId}": {
            "get": {
                "summary": "Get user address book details",
                "description": "Get user address book details. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Get user address by userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userAddressId",
                        "in": "path",
                        "description": "Get user address by userAddressId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "An array of the user address details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAddress"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user address",
                "description": "Update user address. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Get user address by userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userAddressId",
                        "in": "path",
                        "description": "Get user address by userAddressId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update user address",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserAddress"
                        }
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "update user address successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/addUserAddress"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Address by user",
                "description": "Delete Address by user\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Get user address by userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userAddressId",
                        "in": "path",
                        "description": "Get user address by userAddressId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "Delected user address",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAddress"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_addresses": {
            "get": {
                "summary": "Get user address details",
                "description": "Get user address book details. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "An array of the user address details get infomartion",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAddress"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "summary": "Get all transactions list",
                "description": "Get all transactions list",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Get all transactions list"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/transactions": {
            "get": {
                "summary": "Get user transactions list",
                "description": "Get user transactions list",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "set parameter userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Get user transactions list"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders/{session_id}": {
            "post": {
                "summary": "Create New Orders",
                "description": "Create orders.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "session_id",
                        "in": "path",
                        "description": "Keywords of session",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "create orders",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addOrder"
                        }
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "200": {
                        "description": "New orders added",
                        "schema": {
                            "$ref": "#/definitions/addOrder"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "summary": "Get restaurant orders details",
                "description": "Get restaurant orders details \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "use User id by filter orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "200": {
                        "description": "An array of the restaurant orders details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/order"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries": {
            "post": {
                "summary": "Create New countries",
                "description": "Create countries.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "create countries",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Countries"
                ],
                "responses": {
                    "200": {
                        "description": "New countries added",
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Filter  countries",
                "description": "Filter countries.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Countries"
                ],
                "responses": {
                    "200": {
                        "description": "Filter countries",
                        "schema": {
                            "$ref": "#/definitions/countryList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries/{countryId}": {
            "delete": {
                "summary": "DELETE countries by its id",
                "description": "DELETE countries.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "delete by countryId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Countries"
                ],
                "responses": {
                    "200": {
                        "description": "DELETE countries",
                        "schema": {
                            "$ref": "#/definitions/countryList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update countries by its id",
                "description": "Update countries.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "countryId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "countries",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Countries"
                ],
                "responses": {
                    "200": {
                        "description": "Update countryId",
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get countries by its id",
                "description": "Get country.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "countryId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Countries"
                ],
                "responses": {
                    "200": {
                        "description": "Get country",
                        "schema": {
                            "$ref": "#/definitions/countryList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states": {
            "post": {
                "summary": "Create New states",
                "description": "Create states.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "create states",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "States"
                ],
                "responses": {
                    "200": {
                        "description": "New states added",
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Filter  states",
                "description": "Filter states.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "States"
                ],
                "responses": {
                    "200": {
                        "description": "Filter states",
                        "schema": {
                            "$ref": "#/definitions/statesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states/{stateId}": {
            "delete": {
                "summary": "DELETE states by its id",
                "description": "DELETE states.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "delete by stateId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "States"
                ],
                "responses": {
                    "200": {
                        "description": "DELETE states",
                        "schema": {
                            "$ref": "#/definitions/statesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update states by its id",
                "description": "Update states.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "stateId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "states",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "States"
                ],
                "responses": {
                    "200": {
                        "description": "Update stateId",
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get states by its id",
                "description": "Get city.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "stateId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "States"
                ],
                "responses": {
                    "200": {
                        "description": "Get city",
                        "schema": {
                            "$ref": "#/definitions/statesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities": {
            "post": {
                "summary": "Create New cities",
                "description": "Create cities.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "create cities",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "Cities"
                ],
                "responses": {
                    "200": {
                        "description": "New cities added",
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Filter  cities",
                "description": "Filter cities.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Cities"
                ],
                "responses": {
                    "200": {
                        "description": "Filter cities",
                        "schema": {
                            "$ref": "#/definitions/citiesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities/{cityId}": {
            "delete": {
                "summary": "DELETE cities by its id",
                "description": "DELETE cities.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "delete by cityId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Cities"
                ],
                "responses": {
                    "200": {
                        "description": "DELETE cities",
                        "schema": {
                            "$ref": "#/definitions/citiesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update cities by its id",
                "description": "Update cities.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "cityId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "cities",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "Cities"
                ],
                "responses": {
                    "200": {
                        "description": "Update cityId",
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get cities by its id",
                "description": "Get city.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "cityId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Cities"
                ],
                "responses": {
                    "200": {
                        "description": "Get city",
                        "schema": {
                            "$ref": "#/definitions/citiesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/sudopay_synchronize": {
            "get": {
                "summary": "Get sudopay synchronize details by its id.",
                "description": "Get sudopay synchronize details.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateways"
                ],
                "responses": {
                    "200": {
                        "description": "Get sudopay synchronize details."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/user_cash_withdrawals": {
            "post": {
                "summary": "Create new cash withdrawals .",
                "description": "Create new cash withdrawals .",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Create new cash withdrawals",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawals"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawals"
                ],
                "responses": {
                    "200": {
                        "description": "Create new cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawals"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get user cash withdrawals by its id.",
                "description": "Get user cash withdrawals by its id.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCashWithdrawals"
                ],
                "responses": {
                    "200": {
                        "description": "Get withdrawal request amount."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/user_cash_withdrawals/{userCashWithdrawalsId}": {
            "put": {
                "summary": "Update user cash withdrawals by its id",
                "description": "Update user cash withdrawals.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userCashWithdrawalsId",
                        "in": "path",
                        "description": "userCashWithdrawalsId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update user cash withdrawals",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUserCashWithdrawals"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawals"
                ],
                "responses": {
                    "200": {
                        "description": "Update user cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/updateUserCashWithdrawals"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_cash_withdrawals": {
            "get": {
                "summary": "Filter user cash withdrawals.",
                "description": "Filter user cash withdrawals.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "stringc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCashWithdrawals"
                ],
                "responses": {
                    "200": {
                        "description": "Filter withdrawal request amount.",
                        "schema": {
                            "$ref": "#/definitions/listUserCashWithdrawals"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts": {
            "post": {
                "summary": "Create Money transfer account.",
                "description": "Create Money transfer account.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Create Money transfer account.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccounts"
                ],
                "responses": {
                    "200": {
                        "description": "Create Money transfer account.",
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Money transfer accounts",
                "description": "Money transfer accounts",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MoneyTransferAccounts"
                ],
                "responses": {
                    "200": {
                        "description": "get Money transfer account."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts/{moneyTransferAccountId}": {
            "get": {
                "summary": "Get particular money transfer account",
                "description": "Get particular money transfer account",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "moneyTransferAccountId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccounts"
                ],
                "responses": {
                    "200": {
                        "description": "Get particular money transfer account"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Money transfer account",
                "description": "Update Money transfer account",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "moneyTransferAccountId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update Money transfer account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccounts"
                ],
                "responses": {
                    "200": {
                        "description": "Update Money transfer account",
                        "schema": {
                            "$ref": "#/definitions/updateMoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Money transfer account",
                "description": "Delete Money transfer account\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "moneyTransferAccountId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccounts"
                ],
                "responses": {
                    "200": {
                        "description": "Delete money transfer account"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways": {
            "get": {
                "summary": "Filter  payment gateways.",
                "description": "Filter payment gateways.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateways"
                ],
                "responses": {
                    "200": {
                        "description": "Filter payment gateways.",
                        "schema": {
                            "$ref": "#/definitions/PaymentGatewaysLists"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/{paymentGatewayId}": {
            "put": {
                "summary": "Update payment gateway by its id.",
                "description": "Update payment gateway.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "paymentGatewayId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "payment gateway.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentGatewayUpdate"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateways"
                ],
                "responses": {
                    "200": {
                        "description": "Update payment gateway.",
                        "schema": {
                            "$ref": "#/definitions/PaymentGatewayUpdate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get payment gateway by its id.",
                "description": "Get payment gateway.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "paymentGatewayId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "PaymentGateways"
                ],
                "responses": {
                    "200": {
                        "description": "Get payment gateway.",
                        "schema": {
                            "$ref": "#/definitions/PaymentGatewaysLists"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages": {
            "post": {
                "summary": "Create New page.",
                "description": "Create page.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Create page.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    }
                ],
                "tags": [
                    "Pages"
                ],
                "responses": {
                    "200": {
                        "description": "New page added.",
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Filter  pages.",
                "description": "Filter pages.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Pages"
                ],
                "responses": {
                    "200": {
                        "description": "Filter pages.",
                        "schema": {
                            "$ref": "#/definitions/pagesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages/{pageId}": {
            "delete": {
                "summary": "DELETE page by its id.",
                "description": "DELETE page.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "delete by pageId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Pages"
                ],
                "responses": {
                    "200": {
                        "description": "DELETE page.",
                        "schema": {
                            "$ref": "#/definitions/pagesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update page by its id.",
                "description": "Update page.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "pageId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "page.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    }
                ],
                "tags": [
                    "Pages"
                ],
                "responses": {
                    "200": {
                        "description": "Update pageId.",
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get page by its id.",
                "description": "Get page.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "pageId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Pages"
                ],
                "responses": {
                    "200": {
                        "description": "Get page.",
                        "schema": {
                            "$ref": "#/definitions/pagesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages": {
            "post": {
                "summary": "Create New languages.",
                "description": "Create languages.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "create languages.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Languages"
                ],
                "responses": {
                    "200": {
                        "description": "New languages added.",
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Filter  languages.",
                "description": "Filter languages.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Languages"
                ],
                "responses": {
                    "200": {
                        "description": "Filter languages.",
                        "schema": {
                            "$ref": "#/definitions/languagesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages/{languageId}": {
            "delete": {
                "summary": "DELETE languages by its id.",
                "description": "DELETE languages.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "delete by languageId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Languages"
                ],
                "responses": {
                    "200": {
                        "description": "DELETE languages.",
                        "schema": {
                            "$ref": "#/definitions/languagesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update languages by its id.",
                "description": "Update languages.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "languageId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "languages.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Languages"
                ],
                "responses": {
                    "200": {
                        "description": "Update languageId.",
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get languages by its id.",
                "description": "Get language.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "languageId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Languages"
                ],
                "responses": {
                    "200": {
                        "description": "Get language.",
                        "schema": {
                            "$ref": "#/definitions/languagesList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "summary": "Filter Settings.",
                "description": "Filter Settings.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "setting_category_id",
                        "in": "query",
                        "description": "settings category",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "description": "Filter settings  ."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings/{settingId}": {
            "put": {
                "summary": "Update settings by its id.",
                "description": "Update settings.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "settingId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/settingsList"
                        }
                    }
                ],
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "description": "Update settingCategory.",
                        "schema": {
                            "$ref": "#/definitions/settingsList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "post": {
                "summary": "Create New contacts.",
                "description": "Create contacts.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Create contacts.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserContact"
                        }
                    }
                ],
                "tags": [
                    "Contacts"
                ],
                "responses": {
                    "200": {
                        "description": "New Contacts added.",
                        "schema": {
                            "$ref": "#/definitions/UserContact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get  admin user contact reviews",
                "description": "Get  admin user contact reviews",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Contacts"
                ],
                "responses": {
                    "200": {
                        "description": "Get  admin user contact reviews",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserContact"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts/{contactId}": {
            "get": {
                "summary": "Get particular contact details",
                "description": "Get particular contact details",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "contactId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Contacts"
                ],
                "responses": {
                    "200": {
                        "description": "Get particular contact details"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "DELETE user contact Id in admin",
                "description": "DELETE user contact Id in admin",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "Delte by contactId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Contacts"
                ],
                "responses": {
                    "200": {
                        "description": "DELETE user contact Id in admin",
                        "schema": {
                            "$ref": "#/definitions/UserContact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "summary": "Filter  providers.",
                "description": "Filter  providers.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "200": {
                        "description": "Get social providers lists"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/providers/{providerId}": {
            "get": {
                "summary": "Get particular social provider",
                "description": "Get particular social provider",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "providerId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "200": {
                        "description": "Get particular social provider"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update particular social provider",
                "description": "Update particular social provider.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "providerId.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateProvider"
                        }
                    }
                ],
                "tags": [
                    "Providers"
                ],
                "responses": {
                    "200": {
                        "description": "particular social provider.",
                        "schema": {
                            "$ref": "#/definitions/updateProvider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/social_login": {
            "post": {
                "summary": "User social login",
                "description": "User social login post",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User social login post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addProvider"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User login posted successfully",
                        "schema": {
                            "$ref": "#/definitions/addProvider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "User social login for twitter",
                "description": "User social login for twitter\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User social login for twitter "
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates": {
            "get": {
                "summary": "Filter email template.",
                "description": "Filter email template.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Filter email template.",
                        "schema": {
                            "$ref": "#/definitions/emailTempalteList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates/{emailTemplateId}": {
            "get": {
                "summary": "Get email template",
                "description": "Get email template details\n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "Get email template",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Get email template"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Updated  email template",
                "description": "Updated email template. \n",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "Get email template",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update email template",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/emailTempalteUpdate"
                        }
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Updated branch information sucessfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/emailTempalteUpdate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories": {
            "get": {
                "summary": "Get all settings categories list",
                "description": "Get settings categories list",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "sortby",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "fields",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "q",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "description": "Get all settings categories list"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories/{settingCategoryId}": {
            "get": {
                "summary": "Get all settings lists based on category ID",
                "description": "Get all settings lists based on category ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingCategoryId",
                        "in": "path",
                        "description": "settingCategoryId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Settings"
                ],
                "responses": {
                    "200": {
                        "description": "Get all settings lists based on category ID"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/categories": {
            "post": {
                "summary": "Creates a new Category",
                "description": "Creates a new Category",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCategory"
                        }
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "New Category added",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Categories",
                "description": "Returns all Categories from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Category",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Categories",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/categories/{categoryId}": {
            "delete": {
                "summary": "Delete Category",
                "description": "Deletes a single Category based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of Category to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Category by its id",
                "description": "Update Category by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of Category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCategory"
                        }
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Category",
                "description": "Returns a Category based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of Category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Category",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/coupons": {
            "post": {
                "summary": "Creates a new Coupon",
                "description": "Creates a new Coupon",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Coupon JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCoupon"
                        }
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "New Coupon added",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Coupons",
                "description": "Returns all Coupons from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Coupon",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Coupons",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/coupons/{couponId}": {
            "delete": {
                "summary": "Delete Coupon",
                "description": "Deletes a single Coupon based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "couponId",
                        "in": "path",
                        "description": "ID of Coupon to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Coupon deleted",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Coupon by its id",
                "description": "Update Coupon by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "couponId",
                        "in": "path",
                        "description": "ID of Coupon to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Coupon JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCoupon"
                        }
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Coupon updated",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Coupon",
                "description": "Returns a Coupon based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "couponId",
                        "in": "path",
                        "description": "ID of Coupon to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Coupon",
                        "schema": {
                            "$ref": "#/definitions/Coupon"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events": {
            "post": {
                "summary": "Creates a new Event",
                "description": "Creates a new Event",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Event JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEvent"
                        }
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "New Event added",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Events",
                "description": "Returns all Events from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Event",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_date",
                        "in": "query",
                        "description": "Filter by event date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_end_date",
                        "in": "query",
                        "description": "Filter by event end date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_id",
                        "in": "query",
                        "description": "limit records by venue value",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "seried_id",
                        "in": "query",
                        "description": "limit records by seried value",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "limit records by category",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Events",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/{eventId}": {
            "delete": {
                "summary": "Delete Event",
                "description": "Deletes a single Event based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of Event to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Event deleted",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Event by its id",
                "description": "Update Event by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of Event to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Event JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateEvent"
                        }
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Event updated",
                        "schema": {
                            "$ref": "#/definitions/updateEvent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Event",
                "description": "Returns a Event based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "event_date",
                        "in": "query",
                        "description": "Filter by event date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_end_date",
                        "in": "query",
                        "description": "Filter by event end date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Value is view",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Event",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/{eventId}/best_available_seats": {
            "post": {
                "summary": "Creates a new Event best available seat",
                "description": "Creates a new best available seat",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of eventId",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Event JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEventBest"
                        }
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "New Event Best added",
                        "schema": {
                            "$ref": "#/definitions/addEventBest"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/news": {
            "post": {
                "summary": "Creates a new News",
                "description": "Creates a new News",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Article JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addNews"
                        }
                    }
                ],
                "tags": [
                    "News"
                ],
                "responses": {
                    "200": {
                        "description": "New News added",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all News",
                "description": "Returns all News from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter News",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "news_category_id",
                        "in": "query",
                        "description": "Keywords to news category",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Keywords to news id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "News"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched News",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/news/{newsId}": {
            "delete": {
                "summary": "Delete News",
                "description": "Deletes a single News based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsId",
                        "in": "path",
                        "description": "ID of News to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "News"
                ],
                "responses": {
                    "200": {
                        "description": "News deleted",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update News by its id",
                "description": "Update News by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsId",
                        "in": "path",
                        "description": "ID of News to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Article JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addNews"
                        }
                    }
                ],
                "tags": [
                    "News"
                ],
                "responses": {
                    "200": {
                        "description": "News updated",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch News",
                "description": "Returns a News based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsId",
                        "in": "path",
                        "description": "ID of News to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "News"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched News",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/event_zones": {
            "post": {
                "summary": "Creates a new Event Zone",
                "description": "Creates a new Event Zone",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Event Zone JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEventZone"
                        }
                    }
                ],
                "tags": [
                    "EventZone"
                ],
                "responses": {
                    "200": {
                        "description": "New Event Zone added",
                        "schema": {
                            "$ref": "#/definitions/EventZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Event Zones",
                "description": "Returns all Event Zones from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Event Zone",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "EventZone"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Event Zones",
                        "schema": {
                            "$ref": "#/definitions/EventZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/event_zones/{eventZoneId}": {
            "delete": {
                "summary": "Delete Event Zone",
                "description": "Deletes a single Event Zone based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventZoneId",
                        "in": "path",
                        "description": "ID of Event Zone to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EventZone"
                ],
                "responses": {
                    "200": {
                        "description": "Event Zone deleted",
                        "schema": {
                            "$ref": "#/definitions/EventZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Event Zone by its id",
                "description": "Update Event Zone by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventZoneId",
                        "in": "path",
                        "description": "ID of Event Zone to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Event Zone JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEventZone"
                        }
                    }
                ],
                "tags": [
                    "EventZone"
                ],
                "responses": {
                    "200": {
                        "description": "Event Zone updated",
                        "schema": {
                            "$ref": "#/definitions/EventZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Event Zone",
                "description": "Returns a Event Zone based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventZoneId",
                        "in": "path",
                        "description": "ID of Event Zone to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EventZone"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Event Zone",
                        "schema": {
                            "$ref": "#/definitions/EventZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/series": {
            "post": {
                "summary": "Creates a new Series",
                "description": "Creates a new Series",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Series JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSeries"
                        }
                    }
                ],
                "tags": [
                    "Series"
                ],
                "responses": {
                    "200": {
                        "description": "New Series added",
                        "schema": {
                            "$ref": "#/definitions/Series"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Series",
                "description": "Returns all Series from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Series",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Series"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Series",
                        "schema": {
                            "$ref": "#/definitions/Series"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/series/{seriesId}": {
            "delete": {
                "summary": "Delete Series",
                "description": "Deletes a single Series based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "seriesId",
                        "in": "path",
                        "description": "ID of Series to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Series"
                ],
                "responses": {
                    "200": {
                        "description": "Series deleted",
                        "schema": {
                            "$ref": "#/definitions/Series"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Series by its id",
                "description": "Update Series by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "seriesId",
                        "in": "path",
                        "description": "ID of Series to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Series JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSeries"
                        }
                    }
                ],
                "tags": [
                    "Series"
                ],
                "responses": {
                    "200": {
                        "description": "Series updated",
                        "schema": {
                            "$ref": "#/definitions/Series"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Series",
                "description": "Returns a Series based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "seriesId",
                        "in": "path",
                        "description": "ID of Series to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Series"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Series",
                        "schema": {
                            "$ref": "#/definitions/Series"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_zones": {
            "post": {
                "summary": "Creates a new Venue Zone",
                "description": "Creates a new Venue Zone",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Article JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVenueZone"
                        }
                    }
                ],
                "tags": [
                    "VenueZone"
                ],
                "responses": {
                    "200": {
                        "description": "New Venue Zone added",
                        "schema": {
                            "$ref": "#/definitions/addVenueZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Venue Zones",
                "description": "Returns all Venue Zones from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Zone",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_id",
                        "in": "query",
                        "description": "Keywords to venue id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueZone"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zones",
                        "schema": {
                            "$ref": "#/definitions/VenueZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_zones/{venueZoneId}": {
            "delete": {
                "summary": "Delete Venue Zone",
                "description": "Deletes a single Venue Zone based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueZoneId",
                        "in": "path",
                        "description": "create venueZoneId",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueZone"
                ],
                "responses": {
                    "200": {
                        "description": "Venue Zone deleted",
                        "schema": {
                            "$ref": "#/definitions/VenueZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Venue Zone by its id",
                "description": "Update Venue Zone by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueZoneId",
                        "in": "path",
                        "description": "update venueZoneId",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Article JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateVenueZone"
                        }
                    }
                ],
                "tags": [
                    "VenueZone"
                ],
                "responses": {
                    "200": {
                        "description": "Venue Zone updated",
                        "schema": {
                            "$ref": "#/definitions/VenueZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Venue Zone",
                "description": "Returns a Venue Zone based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueZoneId",
                        "in": "path",
                        "description": "ID of Venue Zone to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "VenueZone"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone",
                        "schema": {
                            "$ref": "#/definitions/VenueZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_zone_sections": {
            "get": {
                "summary": "Fetch all Venue Zone Sections",
                "description": "Returns all Venue Zone Sections of particular venue zone",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_id",
                        "in": "query",
                        "description": "Keywords to venue id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_zone_id",
                        "in": "query",
                        "description": "Keywords to venue zone id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Zone Section",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueZoneSection"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone Sections",
                        "schema": {
                            "$ref": "#/definitions/VenueZoneSection"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_zone_section_rows": {
            "get": {
                "summary": "Fetch all Venue Zone Section Rows",
                "description": "Returns all Venue Zone Section Rows of particular venue zone section",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_zone_section_id",
                        "in": "query",
                        "description": "Keywords to venue zone section id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Zone Section Row",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueZoneSectionRow"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone Section Rows",
                        "schema": {
                            "$ref": "#/definitions/VenueZoneSectionRow"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_zone_section_seats": {
            "get": {
                "summary": "Fetch all Venue Zone Section Row Seats",
                "description": "Returns all Venue Zone Section Row Seats of particular venue zone section row",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_id",
                        "in": "query",
                        "description": "Keywords to venue id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_zone_id",
                        "in": "query",
                        "description": "Keywords to venue zone id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_zone_section_id",
                        "in": "query",
                        "description": "Keywords to venue zone section id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venue_zone_section_row_id",
                        "in": "query",
                        "description": "Keywords to venue zone section row id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Zone Section",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueZoneSectionRowSeat"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone Section Seats",
                        "schema": {
                            "$ref": "#/definitions/VenueZoneSectionRowSeat"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venues": {
            "post": {
                "summary": "Creates a new Venue",
                "description": "Creates a new Venue",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Newsletter JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVenue"
                        }
                    }
                ],
                "tags": [
                    "Venue"
                ],
                "responses": {
                    "200": {
                        "description": "New Venue added",
                        "schema": {
                            "$ref": "#/definitions/addVenue"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Venues",
                "description": "Returns all Venues from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Venue"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venues",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}": {
            "delete": {
                "summary": "Delete Venue",
                "description": "Deletes a single Venue based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "ID of Venue to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Venue"
                ],
                "responses": {
                    "200": {
                        "description": "Venue deleted",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Venue by its id",
                "description": "Update Venue by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "ID of Venue to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Venue JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVenue"
                        }
                    }
                ],
                "tags": [
                    "Venue"
                ],
                "responses": {
                    "200": {
                        "description": "Venue updated",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Venue",
                "description": "Returns a Venue based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "ID of Venue to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Event",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Venue"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue",
                        "schema": {
                            "$ref": "#/definitions/Venue"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/newsletters": {
            "post": {
                "summary": "Creates a new Newsletter",
                "description": "Creates a new Newsletter",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Newsletter JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addNewsletter"
                        }
                    }
                ],
                "tags": [
                    "Newsletter"
                ],
                "responses": {
                    "200": {
                        "description": "New Newsletter added",
                        "schema": {
                            "$ref": "#/definitions/Newsletter"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Newsletters",
                "description": "Returns all Newsletters from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Newsletter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Newsletter"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Newsletters",
                        "schema": {
                            "$ref": "#/definitions/Newsletter"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/newsletters/{newsletterId}": {
            "delete": {
                "summary": "Delete Newsletter",
                "description": "Deletes a single Newsletter based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsletterId",
                        "in": "path",
                        "description": "ID of Newsletter to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Newsletter"
                ],
                "responses": {
                    "200": {
                        "description": "Newsletter deleted",
                        "schema": {
                            "$ref": "#/definitions/Newsletter"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Newsletter",
                "description": "Returns a Newsletter based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsletterId",
                        "in": "path",
                        "description": "ID of Newsletter to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Newsletter"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Newsletter",
                        "schema": {
                            "$ref": "#/definitions/Newsletter"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}/venue_zone_previews": {
            "post": {
                "summary": "Creates a new Venue Zone Preview",
                "description": "Creates a new Venue Zone Preview",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "get venue id value",
                        "required": true,
                        "type": "int32",
                        "format": "int32"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Article JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVenueZonePreview"
                        }
                    }
                ],
                "tags": [
                    "VenueZonePreview"
                ],
                "responses": {
                    "200": {
                        "description": "New Venue Zone Preview added",
                        "schema": {
                            "$ref": "#/definitions/addVenueZonePreview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Venue Zone Previews",
                "description": "Returns all Venue Zone Previews from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "add venue id.",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Zone Preview",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueZonePreview"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone Previews",
                        "schema": {
                            "$ref": "#/definitions/VenueZonePreview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}/venue_zone_previews/{venueZonePreviewId}": {
            "delete": {
                "summary": "Delete Venue Zone Preview",
                "description": "Deletes a single Venue Zone Preview based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "add venue id.",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueZonePreviewId",
                        "in": "path",
                        "description": "ID of Venue Zone Preview to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "VenueZonePreview"
                ],
                "responses": {
                    "200": {
                        "description": "Venue Zone Preview deleted",
                        "schema": {
                            "$ref": "#/definitions/VenueZonePreview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Venue Zone Preview by its id",
                "description": "Update Venue Zone Preview by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "get venue id value",
                        "required": true,
                        "type": "int32",
                        "format": "int32"
                    },
                    {
                        "name": "venueZonePreviewId",
                        "in": "path",
                        "description": "ID of Venue Zone Preview to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Article JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVenueZonePreview"
                        }
                    }
                ],
                "tags": [
                    "VenueZonePreview"
                ],
                "responses": {
                    "200": {
                        "description": "Venue Zone Preview updated",
                        "schema": {
                            "$ref": "#/definitions/VenueZonePreview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Venue Zone Preview",
                "description": "Returns a Venue Zone Preview based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "add venue id.",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "venueZonePreviewId",
                        "in": "path",
                        "description": "ID of Venue Zone Preview to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "VenueZonePreview"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone Preview",
                        "schema": {
                            "$ref": "#/definitions/VenueZonePreview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_zone_previews": {
            "get": {
                "summary": "Fetch Venue Zone Preview",
                "description": "Returns a Venue Zone Preview based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Zone Preview",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueZonePreview"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone Preview",
                        "schema": {
                            "$ref": "#/definitions/VenueZonePreview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/gift_vouchers": {
            "post": {
                "summary": "Creates a new Gift Voucher",
                "description": "Creates a new Gift Voucher",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Gift Voucher JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addGiftVoucher"
                        }
                    }
                ],
                "tags": [
                    "GiftVoucher"
                ],
                "responses": {
                    "200": {
                        "description": "New Gift Voucher added",
                        "schema": {
                            "$ref": "#/definitions/GiftVoucher"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Gift Vouchers",
                "description": "Returns all Gift Vouchers from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Gift Voucher",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "GiftVoucher"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Gift Vouchers",
                        "schema": {
                            "$ref": "#/definitions/GiftVoucher"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/gift_vouchers/{giftVoucherId}": {
            "delete": {
                "summary": "Delete Gift Voucher",
                "description": "Deletes a single Gift Voucher based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "giftVoucherId",
                        "in": "path",
                        "description": "ID of Gift Voucher to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "GiftVoucher"
                ],
                "responses": {
                    "200": {
                        "description": "Gift Voucher deleted",
                        "schema": {
                            "$ref": "#/definitions/GiftVoucher"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Gift Voucher",
                "description": "Returns a Gift Voucher based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "giftVoucherId",
                        "in": "path",
                        "description": "ID of Gift Voucher to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "GiftVoucher"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Gift Voucher",
                        "schema": {
                            "$ref": "#/definitions/GiftVoucher"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/news_categories": {
            "post": {
                "summary": "Creates a new News Category",
                "description": "Creates a new News Category",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The News Category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addNewsCategory"
                        }
                    }
                ],
                "tags": [
                    "NewsCategory"
                ],
                "responses": {
                    "200": {
                        "description": "New News Category added",
                        "schema": {
                            "$ref": "#/definitions/NewsCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all News Categories",
                "description": "Returns all News Categories from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter News Category",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "news_category_id",
                        "in": "query",
                        "description": "Get records in categories",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "NewsCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched News Categories",
                        "schema": {
                            "$ref": "#/definitions/NewsCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/news_categories/{newsCategoryId}": {
            "delete": {
                "summary": "Delete News Category",
                "description": "Deletes a single News Category based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsCategoryId",
                        "in": "path",
                        "description": "ID of News Category to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "NewsCategory"
                ],
                "responses": {
                    "200": {
                        "description": "News Category deleted",
                        "schema": {
                            "$ref": "#/definitions/NewsCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update News Category by its id",
                "description": "Update News Category by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsCategoryId",
                        "in": "path",
                        "description": "ID of News Category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The News Category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addNewsCategory"
                        }
                    }
                ],
                "tags": [
                    "NewsCategory"
                ],
                "responses": {
                    "200": {
                        "description": "News Category updated",
                        "schema": {
                            "$ref": "#/definitions/NewsCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch News Category",
                "description": "Returns a News Category based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "newsCategoryId",
                        "in": "path",
                        "description": "ID of News Category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "NewsCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched News Category",
                        "schema": {
                            "$ref": "#/definitions/NewsCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/reset_password/{hash}": {
            "put": {
                "summary": "Reset password user.",
                "description": "Reset password user.",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Update user Details.",
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/attachments": {
            "post": {
                "summary": "Creates a new Attachment",
                "description": "Creates a new Attachment",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "class",
                        "in": "query",
                        "description": "Class name.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "thumb",
                        "in": "query",
                        "description": "Thumb.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "amazon_s3_thumb_url",
                        "in": "query",
                        "description": "Amazon s3 thumb url.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "amazon_s3_original_url",
                        "in": "query",
                        "description": "Amazon s3 original url.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "foreign_id",
                        "in": "query",
                        "description": "Foreign id.",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "Create avatar.",
                        "required": false,
                        "type": "file"
                    }
                ],
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "200": {
                        "description": "New Attachment added",
                        "schema": {
                            "$ref": "#/definitions/Attachment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "summary": "Fetch stats",
                "description": "Returns a stats based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "stats"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Venue Zone Preview",
                        "schema": {
                            "$ref": "#/definitions/stats"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/sales_reports": {
            "get": {
                "summary": "Fetch all sales_reports",
                "description": "Returns all sales_reports",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Keywords to event id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_schedule_id",
                        "in": "query",
                        "description": "Keywords to event schedule id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "price_type_id",
                        "in": "query",
                        "description": "Keywords to price type id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sales_channel",
                        "in": "query",
                        "description": "Keywords to sales channel - Values are mobile and site",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date - Get sales reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date - Get sales reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter sales reports",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Report"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched sales reports",
                        "schema": {
                            "$ref": "#/definitions/SalesReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/sales_report_details": {
            "get": {
                "summary": "Fetch all sales_report_details",
                "description": "Returns all sales_sales_report_detailsreports",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Keywords to event id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sales_channel",
                        "in": "query",
                        "description": "Keywords to sales channel - Values are mobile and site",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date - Get sales reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date - Get sales reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter sales reports",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Report"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched sales report details",
                        "schema": {
                            "$ref": "#/definitions/SalesReportDetail"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/capacity_reports": {
            "get": {
                "summary": "Fetch all capacity_reports",
                "description": "Returns all capacity_reports",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Keywords to event id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_schedule_id",
                        "in": "query",
                        "description": "Keywords to event schedule id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter capacity reports",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Report"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched capacity reports",
                        "schema": {
                            "$ref": "#/definitions/CapacityReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/demographic_reports": {
            "get": {
                "summary": "Fetch all demographic_reports",
                "description": "Returns all demographic_reports",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Keywords to event id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_schedule_id",
                        "in": "query",
                        "description": "Keywords to event schedule id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "price_type_id",
                        "in": "query",
                        "description": "Keywords to price type id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sales_channel",
                        "in": "query",
                        "description": "Keywords to sales channel - Values are mobile and site",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date - Get demographic reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date - Get demographic reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter demographic reports",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Report"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched demographic reports",
                        "schema": {
                            "$ref": "#/definitions/DemographicReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/financial_reports": {
            "get": {
                "summary": "Fetch all financial_reports",
                "description": "Returns all financial_reports",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Keywords to event id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_schedule_id",
                        "in": "query",
                        "description": "Keywords to event schedule id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "price_type_id",
                        "in": "query",
                        "description": "Keywords to price type id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sales_channel",
                        "in": "query",
                        "description": "Keywords to sales channel - Values are mobile and site",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date - Get financial reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date - Get financial reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter financial reports",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Report"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched financial reports",
                        "schema": {
                            "$ref": "#/definitions/FinancialReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/participant_reports": {
            "get": {
                "summary": "Fetch all participant_reports",
                "description": "Returns all participant_reports",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Keywords to event id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_schedule_id",
                        "in": "query",
                        "description": "Keywords to event schedule id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "price_type_id",
                        "in": "query",
                        "description": "Keywords to price type id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "invite_type",
                        "in": "query",
                        "description": "Keywords to invite type - Values are invitation or ticket",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter participant reports",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Report"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched participant reports",
                        "schema": {
                            "$ref": "#/definitions/ParticipantReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/visitor_reports": {
            "get": {
                "summary": "Fetch all visitor_reports",
                "description": "Returns all visitor_reports",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Keywords to event id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date - Get visitor reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date - Get visitor reports by date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter visitors reports",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Report"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched visitor reports",
                        "schema": {
                            "$ref": "#/definitions/VisitorReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists": {
            "post": {
                "summary": "Creates a new List",
                "description": "Creates a new List",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The List JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addList"
                        }
                    }
                ],
                "tags": [
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "New List added",
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Lists",
                "description": "Returns all Lists from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter List",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Lists",
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listId}": {
            "delete": {
                "summary": "Delete List",
                "description": "Deletes a single List based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of List to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "List deleted",
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update List by its id",
                "description": "Update List by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of List to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The List JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addList"
                        }
                    }
                ],
                "tags": [
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "List updated",
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch List",
                "description": "Returns a List based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of List to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched List",
                        "schema": {
                            "$ref": "#/definitions/List"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/guests": {
            "post": {
                "summary": "Creates a new Guest",
                "description": "Creates a new Guest",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Guest JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addGuest"
                        }
                    }
                ],
                "tags": [
                    "Guest"
                ],
                "responses": {
                    "200": {
                        "description": "New Guest added",
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Guest",
                "description": "Returns all Guest from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Guest",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "list_id",
                        "in": "query",
                        "description": "Keywords to list",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Guest"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Guests",
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/guests/{guestId}": {
            "delete": {
                "summary": "Delete Guest",
                "description": "Deletes a single Guest based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "guestId",
                        "in": "path",
                        "description": "ID of Guest to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Guest"
                ],
                "responses": {
                    "200": {
                        "description": "Guest deleted",
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Guest by its id",
                "description": "Update Guest by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "guestId",
                        "in": "path",
                        "description": "ID of Guest to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Guest JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addGuest"
                        }
                    }
                ],
                "tags": [
                    "Guest"
                ],
                "responses": {
                    "200": {
                        "description": "Guest updated",
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Guest",
                "description": "Returns a Guest based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "guestId",
                        "in": "path",
                        "description": "ID of Guest to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Guest"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Guest",
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listId}/guests": {
            "get": {
                "summary": "Fetch Guests",
                "description": "Returns a Guests based on a list ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "List"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Guests",
                        "schema": {
                            "$ref": "#/definitions/Guest"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/send_invitation": {
            "post": {
                "summary": "Send invitation",
                "description": "Send invitation",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Send invitation JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSendInvitation"
                        }
                    }
                ],
                "tags": [
                    "SendInvitation"
                ],
                "responses": {
                    "200": {
                        "description": "Invitation sent",
                        "schema": {
                            "$ref": "#/definitions/SendInvitation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/occupations": {
            "post": {
                "summary": "Creates a new Occupation",
                "description": "Creates a new Occupation",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Occupation JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addOccupation"
                        }
                    }
                ],
                "tags": [
                    "Occupation"
                ],
                "responses": {
                    "200": {
                        "description": "New Occupation added",
                        "schema": {
                            "$ref": "#/definitions/Occupation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Occupations",
                "description": "Returns all Occupations from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Occupation",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Occupation"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Occupations",
                        "schema": {
                            "$ref": "#/definitions/Occupation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/occupation/{occupationId}": {
            "delete": {
                "summary": "Delete Occupation",
                "description": "Deletes a single Occupation based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "occupationId",
                        "in": "path",
                        "description": "ID of Occupation to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Occupation"
                ],
                "responses": {
                    "200": {
                        "description": "Occupation deleted",
                        "schema": {
                            "$ref": "#/definitions/Occupation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Occupation by its id",
                "description": "Update Occupation by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "occupationId",
                        "in": "path",
                        "description": "ID of Occupation to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Occupation JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addOccupation"
                        }
                    }
                ],
                "tags": [
                    "Occupation"
                ],
                "responses": {
                    "200": {
                        "description": "Occupation updated",
                        "schema": {
                            "$ref": "#/definitions/Occupation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Occupation",
                "description": "Returns a Occupation based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "occupationId",
                        "in": "path",
                        "description": "ID of Occupation to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Occupation"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Occupation",
                        "schema": {
                            "$ref": "#/definitions/Occupation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/educations": {
            "post": {
                "summary": "Creates a new Education",
                "description": "Creates a new Education",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Education JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEducation"
                        }
                    }
                ],
                "tags": [
                    "Education"
                ],
                "responses": {
                    "200": {
                        "description": "New Education added",
                        "schema": {
                            "$ref": "#/definitions/Education"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all Educations",
                "description": "Returns all Educations from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Education",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Education"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Educations",
                        "schema": {
                            "$ref": "#/definitions/Education"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/educations/{educationId}": {
            "delete": {
                "summary": "Delete Education",
                "description": "Deletes a single Education based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "educationId",
                        "in": "path",
                        "description": "ID of Education to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Education"
                ],
                "responses": {
                    "200": {
                        "description": "Education deleted",
                        "schema": {
                            "$ref": "#/definitions/Education"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Education by its id",
                "description": "Update Education by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "educationId",
                        "in": "path",
                        "description": "ID of Education to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Education JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEducation"
                        }
                    }
                ],
                "tags": [
                    "Education"
                ],
                "responses": {
                    "200": {
                        "description": "Education updated",
                        "schema": {
                            "$ref": "#/definitions/Education"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Education",
                "description": "Returns a Education based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "educationId",
                        "in": "path",
                        "description": "ID of Education to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Education"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Education",
                        "schema": {
                            "$ref": "#/definitions/Education"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/{eventId}/venue_zones/{venueZoneId}/seats": {
            "get": {
                "summary": "Fetch Event",
                "description": "Returns a Event based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "venueZoneId",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Event",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/{eventId}/venue/{venueId}": {
            "get": {
                "summary": "Fetch Event",
                "description": "Returns a Event based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of Event to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "venueId",
                        "in": "path",
                        "description": "ID of venue to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Event",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/price_types": {
            "get": {
                "summary": "Fetch all Price type",
                "description": "Returns all Price type from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Category",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PriceType"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Price type",
                        "schema": {
                            "$ref": "#/definitions/price"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/carts": {
            "post": {
                "summary": "Creates a new Cart",
                "description": "Creates a new Cart",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Cart JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCart"
                        }
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "New Cart added",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/carts/{sessionId}": {
            "get": {
                "summary": "Fetch carts",
                "description": "Returns a carts based on a session ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "ID of session to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Cart",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Cart by its id",
                "description": "Update Cart by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "ID of Cart to update by sessionId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Cart JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateCart"
                        }
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "Cart updated",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Cart",
                "description": "Deletes a single Cart based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cartId",
                        "in": "query",
                        "description": "ID of Cart to delete",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "ID of Cart to update by sessionId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "Cart deleted",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/credit_cards": {
            "get": {
                "summary": "Fetch all Credit Card Details",
                "description": "Returns all Credit Card Details from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Credit Card Detail",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "CreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Credit Card Details",
                        "schema": {
                            "$ref": "#/definitions/CreditCard"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/donation_amounts": {
            "get": {
                "summary": "Fetch all donation amounts  Details",
                "description": "Returns all donation amounts Details from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Credit Card Detail",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "DonationAmounts"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched donation amounts details",
                        "schema": {
                            "$ref": "#/definitions/DonationAmounts"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/checkout": {
            "post": {
                "summary": "Creates a new checkout",
                "description": "Creates a new checkout",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Cart JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCheckout"
                        }
                    }
                ],
                "tags": [
                    "Checkout"
                ],
                "responses": {
                    "200": {
                        "description": "New checkout added",
                        "schema": {
                            "$ref": "#/definitions/addCheckout"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_services": {
            "post": {
                "summary": "Creates a new venue services",
                "description": "Creates a new venue services",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The venue service JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVenueService"
                        }
                    }
                ],
                "tags": [
                    "VenueService"
                ],
                "responses": {
                    "200": {
                        "description": "New venue service added",
                        "schema": {
                            "$ref": "#/definitions/addVenueService"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all venue service Details",
                "description": "Returns all venue service Details from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Service Detail",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "VenueService"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  venue service details",
                        "schema": {
                            "$ref": "#/definitions/VenueService"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/venue_services/{VenueServiceId}": {
            "delete": {
                "summary": "Delete venue service",
                "description": "Deletes a single venue service based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VenueServiceId",
                        "in": "path",
                        "description": "ID of Venue Service to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "VenueService"
                ],
                "responses": {
                    "200": {
                        "description": "VenueService deleted",
                        "schema": {
                            "$ref": "#/definitions/VenueService"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Venue Service by its id",
                "description": "Update Venue Service by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VenueServiceId",
                        "in": "path",
                        "description": "ID of Venue service to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Venue Service JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVenueService"
                        }
                    }
                ],
                "tags": [
                    "VenueService"
                ],
                "responses": {
                    "200": {
                        "description": "Venue Service updated",
                        "schema": {
                            "$ref": "#/definitions/VenueService"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch Venue Service",
                "description": "Returns a Venue Service based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "VenueServiceId",
                        "in": "path",
                        "description": "ID of Venue Service to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "VenueService"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched VenueService",
                        "schema": {
                            "$ref": "#/definitions/VenueService"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/VenueService"
                        }
                    }
                }
            }
        },
        "/delivery_methods": {
            "get": {
                "summary": "Fetch all Delivary method",
                "description": "Returns all Delivary method Details from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Service Detail",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Delivarymethod"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  Delivary method details",
                        "schema": {
                            "$ref": "#/definitions/Delivarymethod"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/gift_vouchers/{couponCode}": {
            "get": {
                "summary": "Fetch all couponCode based on gift_vouchers",
                "description": "Returns all couponCode Details from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "couponCode",
                        "in": "query",
                        "description": "couponCode",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "GiftVoucher"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  GiftVoucher details",
                        "schema": {
                            "$ref": "#/definitions/GiftVoucher"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/credit_cards/{creditCardId}": {
            "delete": {
                "summary": "Delete credit card",
                "description": "Deletes a single creditcard Id based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "creditCardId",
                        "in": "path",
                        "description": "ID of credit Card Id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "CreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "CreditCard deleted",
                        "schema": {
                            "$ref": "#/definitions/CreditCard"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders/{orderId}": {
            "get": {
                "summary": "Get Order details",
                "description": "Get Order details",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Get order by order id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "200": {
                        "description": "Order view",
                        "schema": {
                            "$ref": "#/definitions/order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/send_tickets/{orderId}": {
            "get": {
                "summary": "Send Order tickets",
                "description": "Send Order tickets",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Send Tickets by order id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "200": {
                        "description": "Order view",
                        "schema": {
                            "$ref": "#/definitions/order"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "summary": "Fetch all currencies",
                "description": "Returns all currencies from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Event",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Currencies"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched currencies",
                        "schema": {
                            "$ref": "#/definitions/Currencies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/event_schedules": {
            "get": {
                "summary": "Fetch all event schedules Details",
                "description": "Returns all venue event schedules  from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter Venue Service Detail",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "EventSchedule"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  venue service details",
                        "schema": {
                            "$ref": "#/definitions/EventSchedule"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/event_schedules/{EventScheduleId}": {
            "delete": {
                "summary": "Delete event schedule",
                "description": "Deletes a single event schedule based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "EventScheduleId",
                        "in": "path",
                        "description": "ID of event schedule  to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EventSchedule"
                ],
                "responses": {
                    "200": {
                        "description": "EventSchedule deleted",
                        "schema": {
                            "$ref": "#/definitions/EventSchedule"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update event schedule by its id",
                "description": "Update event schedule by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "EventScheduleId",
                        "in": "path",
                        "description": "ID of Event Schedule to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Event Schedule JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateeventschedule"
                        }
                    }
                ],
                "tags": [
                    "EventSchedule"
                ],
                "responses": {
                    "200": {
                        "description": "Event Schedule updated",
                        "schema": {
                            "$ref": "#/definitions/EventSchedule"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch event schedule",
                "description": "Returns a event schedule based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "EventScheduleId",
                        "in": "path",
                        "description": "ID of Event Schedule  to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EventSchedule"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched EventSchedule",
                        "schema": {
                            "$ref": "#/definitions/EventSchedule"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/EventSchedule"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "activateUser": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID"
                },
                "hash": {
                    "type": "string",
                    "format": "string",
                    "description": "hash code"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User ID"
                },
                "user_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User Types"
                },
                "email": {
                    "type": "string",
                    "description": "Email of the User."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Status of the User."
                },
                "username": {
                    "type": "string",
                    "format": "string",
                    "description": "Username of the user."
                },
                "referral_code": {
                    "type": "string",
                    "format": "string",
                    "description": "referred user unique code."
                },
                "password": {
                    "type": "string",
                    "format": "string",
                    "description": "Password of the user."
                }
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "format": "string",
                    "description": "Username of the user."
                },
                "password": {
                    "type": "string",
                    "format": "string",
                    "description": "Password of the user."
                }
            }
        },
        "forgotUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "Email ID"
                }
            }
        },
        "deleteUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID."
                }
            }
        },
        "addUser": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "first_name."
                },
                "last_name": {
                    "type": "string",
                    "description": "last_name."
                },
                "mobile": {
                    "type": "string",
                    "description": "mobile."
                },
                "username": {
                    "type": "string",
                    "description": "username."
                },
                "email": {
                    "type": "string",
                    "description": "Email."
                },
                "password": {
                    "type": "string",
                    "description": "Password."
                },
                "is_agree_terms_conditions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is agree terms conditions."
                },
                "title": {
                    "type": "string",
                    "description": "users title."
                },
                "phone_code": {
                    "type": "string",
                    "format": "string",
                    "description": "user phone code."
                },
                "residence_country_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "user residence country."
                }
            }
        },
        "updateUser": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "add first name value."
                },
                "last_name": {
                    "type": "string",
                    "description": "add last name value."
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "add email value."
                },
                "address": {
                    "type": "string",
                    "description": "add address value."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add country value."
                },
                "residence_country_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add residence country value."
                },
                "phone_code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add phone code value."
                },
                "phone": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add phone number"
                },
                "mobile": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add mobile number"
                },
                "title": {
                    "type": "string",
                    "format": "string",
                    "description": "add title value"
                }
            }
        },
        "changePasswordUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "User password."
                },
                "new_password": {
                    "type": "string",
                    "description": "User new password."
                }
            }
        },
        "usersList": {
            "type": "object",
            "properties": {
                "user_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User Types"
                },
                "referred_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Referred id."
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Parent id."
                },
                "last_login_ip_id": {
                    "type": "string",
                    "description": "Last login ip id."
                },
                "email": {
                    "type": "string",
                    "description": "Email."
                },
                "password": {
                    "type": "string",
                    "description": "Password."
                },
                "last_logged_in_time": {
                    "type": "string",
                    "description": "Last logged in time."
                },
                "is_email_confirmed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is email confirmed."
                },
                "admin_suspend": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Admin suspend."
                },
                "facebook_id": {
                    "type": "string",
                    "description": "Facebook id."
                },
                "fb_access_token": {
                    "type": "string",
                    "description": "Fb access token."
                },
                "is_fb_registered": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is fb registered."
                },
                "referral_code": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Referral code."
                },
                "available_wallet_amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Available wallet amount."
                },
                "is_agree_terms_conditions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is agree terms conditions."
                },
                "is_subscribed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is subscribed."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of restaurant."
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Created date time."
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Updated data time."
                }
            }
        },
        "addUserAddress": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "format": "string",
                    "description": "Title of the address book."
                },
                "building_address": {
                    "type": "string",
                    "format": "string",
                    "description": "building name of the address book."
                },
                "address2": {
                    "type": "string",
                    "format": "string",
                    "description": "Address of the address book."
                },
                "landmark": {
                    "type": "string",
                    "format": "string",
                    "description": "Landmark of the address book."
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "City ID."
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "State ID."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country ID."
                },
                "zip": {
                    "type": "string",
                    "format": "string",
                    "description": "Zipcode."
                }
            }
        },
        "UserAddress": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID."
                },
                "title": {
                    "type": "string",
                    "format": "string",
                    "description": "Title of the address book."
                },
                "building_address": {
                    "type": "string",
                    "format": "string",
                    "description": "building name of the address book."
                },
                "address2": {
                    "type": "string",
                    "format": "string",
                    "description": "Address of the address book."
                },
                "landmark": {
                    "type": "string",
                    "format": "string",
                    "description": "Landmark of the address book."
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "City ID."
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "State ID."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country ID."
                },
                "zip": {
                    "type": "string",
                    "format": "string",
                    "description": "Zipcode."
                }
            }
        },
        "addCountry": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of country."
                },
                "fips104": {
                    "type": "string",
                    "description": "Fips104 of country."
                },
                "iso2": {
                    "type": "string",
                    "description": "Iso2 of country."
                },
                "iso3": {
                    "type": "string",
                    "description": "Iso3 of country."
                },
                "ison": {
                    "type": "string",
                    "description": "Ison of country."
                },
                "internet": {
                    "type": "string",
                    "description": "Internet of country."
                },
                "capital": {
                    "type": "string",
                    "description": "Capital of country."
                },
                "map_reference": {
                    "type": "string",
                    "description": "Map reference of country."
                },
                "nationality_singular": {
                    "type": "string",
                    "description": "Nationality singular of country."
                },
                "nationality_plural": {
                    "type": "string",
                    "description": "Nationality plural of country."
                },
                "currency": {
                    "type": "string",
                    "description": "currency of country."
                },
                "population": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Population of country."
                },
                "currency_code": {
                    "type": "string",
                    "description": "Currency code of country."
                },
                "title": {
                    "type": "string",
                    "description": "Title of country."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment of country."
                }
            }
        },
        "countryList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of country."
                },
                "name": {
                    "type": "string",
                    "description": "Name of country."
                },
                "fips104": {
                    "type": "string",
                    "description": "Fips104 of country."
                },
                "iso2": {
                    "type": "string",
                    "description": "Iso2 of country."
                },
                "iso3": {
                    "type": "string",
                    "description": "Iso3 of country."
                },
                "ison": {
                    "type": "string",
                    "description": "Ison of country."
                },
                "internet": {
                    "type": "string",
                    "description": "Internet of country."
                },
                "capital": {
                    "type": "string",
                    "description": "Capital of country."
                },
                "map_reference": {
                    "type": "string",
                    "description": "Map reference of country."
                },
                "nationality_singular": {
                    "type": "string",
                    "description": "Nationality singular of country."
                },
                "nationality_plural": {
                    "type": "string",
                    "description": "Nationality plural of country."
                },
                "currency": {
                    "type": "string",
                    "description": "currency of country."
                },
                "population": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Population of country."
                },
                "currency_code": {
                    "type": "string",
                    "description": "Currency code of country."
                },
                "title": {
                    "type": "string",
                    "description": "Title of country."
                },
                "comment": {
                    "type": "string",
                    "description": "Comment of country."
                },
                "slug": {
                    "type": "string",
                    "description": "Slug."
                },
                "created": {
                    "type": "string",
                    "description": "created."
                },
                "modified": {
                    "type": "string",
                    "description": "modified."
                }
            }
        },
        "addState": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of State."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country id of State."
                },
                "state_code": {
                    "type": "string",
                    "description": "State code of State."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                }
            }
        },
        "statesList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of State."
                },
                "name": {
                    "type": "string",
                    "description": "Name of State."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country id of State."
                },
                "state_code": {
                    "type": "string",
                    "description": "State code of State."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                },
                "slug": {
                    "type": "string",
                    "description": "Slug."
                },
                "created_at": {
                    "type": "string",
                    "description": "created."
                },
                "updated_at": {
                    "type": "string",
                    "description": "modified."
                }
            }
        },
        "addCity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of City."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country id of City."
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "State id of City."
                },
                "city_code": {
                    "type": "string",
                    "description": "City code of City."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                }
            }
        },
        "citiesList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of City."
                },
                "name": {
                    "type": "string",
                    "description": "Name of City."
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Country id of City."
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "State id of City."
                },
                "city_code": {
                    "type": "string",
                    "description": "City code of City."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                },
                "slug": {
                    "type": "string",
                    "description": "Slug."
                },
                "created": {
                    "type": "string",
                    "description": "created."
                },
                "modified": {
                    "type": "string",
                    "description": "modified."
                }
            }
        },
        "PaymentGatewayUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "slug": {
                    "type": "string",
                    "description": "Slug."
                },
                "display_name": {
                    "type": "string",
                    "description": "display name"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "gateway_fees": {
                    "type": "number",
                    "format": "float",
                    "description": "gateway fees."
                },
                "transaction_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "transaction count"
                },
                "payment_gateway_setting_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "payment gateway setting count"
                },
                "is_test_mode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is test mode"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "isActive"
                },
                "is_enable_for_wallet": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is enable for wallet"
                }
            }
        },
        "PaymentGatewaysLists": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of City."
                },
                "created": {
                    "type": "string",
                    "description": "created."
                },
                "modified": {
                    "type": "string",
                    "description": "modified."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "slug": {
                    "type": "string",
                    "description": "Slug."
                },
                "display_name": {
                    "type": "string",
                    "description": "display name"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "gateway_fees": {
                    "type": "number",
                    "format": "float",
                    "description": "gateway fees."
                },
                "transaction_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "transaction count"
                },
                "payment_gateway_setting_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "payment gateway setting count"
                },
                "is_test_mode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is test mode"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "isActive"
                },
                "is_enable_for_wallet": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is enable for wallet"
                }
            }
        },
        "addPage": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "title."
                },
                "content": {
                    "type": "string",
                    "description": "content."
                },
                "meta_keywords": {
                    "type": "string",
                    "description": "meta keywords."
                },
                "meta_description": {
                    "type": "string",
                    "description": "meta description."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is approved."
                }
            }
        },
        "pagesList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id."
                },
                "title": {
                    "type": "string",
                    "description": "title."
                },
                "slug": {
                    "type": "string",
                    "description": "slug."
                },
                "content": {
                    "type": "string",
                    "description": "content."
                },
                "meta_keywords": {
                    "type": "string",
                    "description": "meta keywords."
                },
                "meta_description": {
                    "type": "string",
                    "description": "meta description."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is approved."
                },
                "created": {
                    "type": "string",
                    "description": "created."
                },
                "modified": {
                    "type": "string",
                    "description": "modified."
                }
            }
        },
        "addLanguage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "iso2": {
                    "type": "string",
                    "description": "iso2."
                },
                "iso3": {
                    "type": "string",
                    "description": "iso3."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                }
            }
        },
        "languagesList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id ."
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "iso2": {
                    "type": "string",
                    "description": "iso2."
                },
                "iso3": {
                    "type": "string",
                    "description": "iso3."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Is active."
                },
                "created": {
                    "type": "string",
                    "description": "created."
                },
                "modified": {
                    "type": "string",
                    "description": "modified."
                }
            }
        },
        "addMoneyTransferAccount": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID."
                },
                "account": {
                    "type": "string",
                    "format": "string",
                    "description": "account."
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Primary."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Status."
                }
            }
        },
        "updateMoneyTransferAccount": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID."
                },
                "account": {
                    "type": "string",
                    "format": "string",
                    "description": "account."
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Status."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Status."
                }
            }
        },
        "settingsList": {
            "type": "object",
            "properties": {
                "setting_category_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "admin setting list page"
                },
                "setting_category_parent_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "admin setting Category ParentId"
                },
                "name": {
                    "type": "string",
                    "description": "setting name."
                },
                "value": {
                    "type": "string",
                    "description": "value."
                },
                "description": {
                    "type": "string",
                    "description": "description."
                },
                "type": {
                    "type": "string",
                    "description": "description."
                },
                "label": {
                    "type": "string",
                    "description": "description."
                },
                "order": {
                    "type": "integer",
                    "format": "int64",
                    "description": "admin setting order value."
                },
                "options": {
                    "type": "string",
                    "description": "description."
                }
            }
        },
        "UserContact": {
            "type": "object",
            "properties": {
                "ip_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "admin get contact ip."
                },
                "first_name": {
                    "type": "string",
                    "description": "admin get contact first Name."
                },
                "last_name": {
                    "type": "string",
                    "description": "admin get contact last Name."
                },
                "email": {
                    "type": "string",
                    "description": "admin get contact email."
                },
                "phone": {
                    "type": "string",
                    "description": "admin get contact phone."
                },
                "subject": {
                    "type": "string",
                    "description": "admin get contact subject"
                },
                "message": {
                    "type": "string",
                    "description": "admin get contact message"
                }
            }
        },
        "addUserCashWithdrawals": {
            "type": "object",
            "properties": {
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User id."
                },
                "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Amount requested."
                },
                "status": {
                    "type": "integer",
                    "format": "int32",
                    "description": "status"
                }
            }
        },
        "updateUserCashWithdrawals": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "remark": {
                    "type": "string",
                    "description": "remark."
                }
            }
        },
        "listUserCashWithdrawals": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id."
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User id."
                },
                "amount": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Amount requested."
                },
                "status": {
                    "type": "string",
                    "description": "Status."
                },
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id."
                }
            }
        },
        "addProvider": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "email id."
                },
                "thrid_party_profile": {
                    "type": "string",
                    "format": "string",
                    "description": "Third party profile details."
                }
            }
        },
        "updateProvider": {
            "type": "object",
            "properties": {
                "icon_class": {
                    "type": "string",
                    "description": "Icon class."
                },
                "button_class": {
                    "type": "string",
                    "description": "Icon class."
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Active status."
                }
            }
        },
        "emailTempalteList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "name"
                },
                "description": {
                    "type": "string",
                    "format": "string",
                    "description": "description"
                },
                "from": {
                    "type": "string",
                    "format": "string",
                    "description": "from."
                },
                "reply_to": {
                    "type": "string",
                    "format": "string",
                    "description": "reply_to."
                },
                "subject": {
                    "type": "string",
                    "format": "string",
                    "description": "subject."
                },
                "email_variables": {
                    "type": "string",
                    "format": "string",
                    "description": "email_variables."
                },
                "email_content": {
                    "type": "string",
                    "format": "string",
                    "description": "email_content."
                },
                "text_content": {
                    "type": "string",
                    "format": "string",
                    "description": "text_content."
                },
                "is_html": {
                    "type": "integer",
                    "format": "int64",
                    "description": "is_html."
                },
                "is_text": {
                    "type": "integer",
                    "format": "int64",
                    "description": "is_text."
                }
            }
        },
        "emailTempalteUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "name"
                },
                "description": {
                    "type": "string",
                    "format": "string",
                    "description": "description"
                },
                "from": {
                    "type": "string",
                    "format": "string",
                    "description": "from."
                },
                "reply_to": {
                    "type": "string",
                    "format": "string",
                    "description": "reply_to."
                },
                "subject": {
                    "type": "string",
                    "format": "string",
                    "description": "subject."
                },
                "email_variables": {
                    "type": "string",
                    "format": "string",
                    "description": "email_variables."
                },
                "email_content": {
                    "type": "string",
                    "format": "string",
                    "description": "email_content."
                },
                "text_content": {
                    "type": "string",
                    "format": "string",
                    "description": "text_content."
                },
                "is_html": {
                    "type": "integer",
                    "format": "int64",
                    "description": "is_html."
                },
                "is_text": {
                    "type": "integer",
                    "format": "int64",
                    "description": "is_text."
                }
            }
        },
        "addCategory": {
            "type": "object",
            "required": [
                "name",
                "slug",
                "is_active"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_active"
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "slug": {
                    "type": "string",
                    "description": "slug"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_active"
                }
            }
        },
        "addEvent": {
            "type": "object",
            "required": [
                "venue_id",
                "category_id",
                "series_id",
                "name",
                "slug",
                "description",
                "trailer_video_url",
                "is_active",
                "is_free_event"
            ],
            "properties": {
                "venue_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "venue_id"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "category_id"
                },
                "series_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "series_id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "trailer_video_url": {
                    "type": "string",
                    "description": "trailer_video_url"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_active"
                },
                "is_free_event": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_free_event"
                },
                "terms_and_conditions": {
                    "type": "string",
                    "format": "string",
                    "description": "add terms and conditions  values"
                },
                "image": {
                    "type": "string",
                    "format": "string",
                    "description": "add image file"
                },
                "video": {
                    "type": "string",
                    "format": "string",
                    "description": "add video file"
                },
                "floor_plan": {
                    "type": "string",
                    "format": "string",
                    "description": "add floor plan image file"
                },
                "ticket_prices": {
                    "type": "string",
                    "format": "string",
                    "description": "add ticket prices image file"
                },
                "eventschedule": {
                    "$ref": "#/definitions/addEventSchedule"
                }
            }
        },
        "addEventSchedule": {
            "type": "object",
            "required": [
                "start_date",
                "end_date"
            ],
            "properties": {
                "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "start_time"
                },
                "end_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "end_time"
                },
                "venue_opens_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "end_time"
                }
            }
        },
        "updateEvent": {
            "type": "object",
            "required": [
                "venue_id",
                "category_id",
                "series_id",
                "name",
                "slug",
                "description",
                "trailer_video_url",
                "is_active",
                "is_free_event"
            ],
            "properties": {
                "venue_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "update event record"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "update category"
                },
                "series_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "update series"
                },
                "name": {
                    "type": "string",
                    "description": "update event name"
                },
                "description": {
                    "type": "string",
                    "description": "update event description"
                },
                "trailer_video_url": {
                    "type": "string",
                    "description": "update event trailer_video_url"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "update event is_active"
                },
                "is_free_event": {
                    "type": "integer",
                    "format": "int32",
                    "description": "update event is_free_event"
                },
                "image": {
                    "type": "string",
                    "format": "string",
                    "description": "add image file"
                },
                "video": {
                    "type": "string",
                    "format": "string",
                    "description": "add video file"
                },
                "floor_plan": {
                    "type": "string",
                    "format": "string",
                    "description": "add floor_plan file"
                },
                "ticket_prices": {
                    "type": "string",
                    "format": "string",
                    "description": "update ticket prices image file"
                },
                "eventschedule": {
                    "$ref": "#/definitions/updateEventSchedule"
                }
            }
        },
        "updateEventSchedule": {
            "type": "object",
            "required": [
                "start_date",
                "end_date"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "update event schedule value"
                },
                "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "update event start_time"
                },
                "end_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "update event end_time"
                },
                "venue_opens_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "end_time"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "venue_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "venue_id"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "category_id"
                },
                "series_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "series_id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "slug": {
                    "type": "string",
                    "description": "slug"
                },
                "start_date": {
                    "type": "string",
                    "description": "start_date"
                },
                "end_date": {
                    "type": "string",
                    "description": "end_date"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "trailer_video_url": {
                    "type": "string",
                    "description": "trailer_video_url"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_active"
                },
                "is_free_event": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_free_event"
                }
            }
        },
        "addNews": {
            "type": "object",
            "required": [
                "title",
                "slug",
                "description",
                "is_published",
                "published_on"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "add title"
                },
                "description": {
                    "type": "string",
                    "description": "add description"
                },
                "is_published": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add is_published"
                },
                "published_on": {
                    "type": "string",
                    "description": "add  published_on"
                },
                "news_category_id": {
                    "type": "string",
                    "description": "add news categories"
                },
                "image": {
                    "type": "string",
                    "description": "add image file name"
                }
            }
        },
        "News": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "title": {
                    "type": "string",
                    "description": "title"
                },
                "slug": {
                    "type": "string",
                    "description": "slug"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "is_published": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_published"
                },
                "published_on": {
                    "type": "string",
                    "description": "published_on"
                }
            }
        },
        "addEventZone": {
            "type": "object",
            "required": [
                "name",
                "event_id",
                "venue_id",
                "venue_zone_id",
                "available_count"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "add price type id"
                },
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "event_id"
                },
                "venue_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "venue_id"
                },
                "venue_zone_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "venue_zone_id"
                },
                "eventsection": {
                    "$ref": "#/definitions/addEventZoneSections"
                }
            }
        },
        "addEventZoneSections": {
            "type": "object",
            "properties": {
                "venue_zone_section_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add trailer video url"
                },
                "eventzonerow": {
                    "$ref": "#/definitions/addEventRow"
                },
                "eventzoneprice": {
                    "$ref": "#/definitions/addEventZonePrice"
                }
            }
        },
        "addEventRow": {
            "type": "object",
            "properties": {
                "venue_zone_section_row_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add venue zone section row id"
                }
            }
        },
        "addEventZonePrice": {
            "type": "object",
            "properties": {
                "price_type_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add price type id"
                },
                "price": {
                    "type": "string",
                    "format": "string",
                    "description": "add price amount"
                }
            }
        },
        "EventZone": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "event_id"
                },
                "venue_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "venue_id"
                },
                "venue_zone_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "venue_zone_id"
                },
                "is_available": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_available"
                },
                "available_count": {
                    "type": "integer",
                    "format": "int64",
                    "description": "available_count"
                }
            }
        },
        "addVenue": {
            "type": "object",
            "required": [
                "name",
                "slug",
                "address1",
                "address2",
                "city_id",
                "state_id",
                "country_id",
                "is_active"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "add venue name"
                },
                "address1": {
                    "type": "string",
                    "description": "add venue address1"
                },
                "address2": {
                    "type": "string",
                    "description": "add venue address2"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add city_id value"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add  state_id value"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add  country_id value"
                },
                "description": {
                    "type": "string",
                    "format": "string",
                    "description": "add  description value"
                },
                "website_url": {
                    "type": "string",
                    "format": "string",
                    "description": "add  website url value"
                },
                "phone_number": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add  phone number value"
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "add  email value"
                },
                "latitude": {
                    "type": "string",
                    "format": "string",
                    "description": "add  latitude value"
                },
                "longitude": {
                    "type": "string",
                    "format": "string",
                    "description": "add  longitude value"
                },
                "twitter_url": {
                    "type": "string",
                    "format": "string",
                    "description": "add  twitter url value"
                },
                "facebook_url": {
                    "type": "string",
                    "format": "string",
                    "description": "add  facebook url value"
                },
                "google_plus_url": {
                    "type": "string",
                    "format": "string",
                    "description": "add  google plus url value"
                },
                "venue_service_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add venue service value"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add is_active value"
                },
                "image": {
                    "type": "string",
                    "description": "add image file name"
                },
                "svg_image": {
                    "type": "string",
                    "description": "add svg image file name"
                },
                "slider_image": {
                    "type": "string",
                    "description": "add slider image file name"
                },
                "is_seat_map": {
                    "type": "integer",
                    "description": "is seat map"
                }
            }
        },
        "Venue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "slug": {
                    "type": "string",
                    "description": "slug"
                },
                "address1": {
                    "type": "string",
                    "description": "address1"
                },
                "address2": {
                    "type": "string",
                    "description": "address2"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "city_id"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "state_id"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "country_id"
                },
                "description": {
                    "type": "string",
                    "format": "string",
                    "description": "get  description value"
                },
                "website_url": {
                    "type": "string",
                    "format": "string",
                    "description": "get  website url value"
                },
                "phone_number": {
                    "type": "integer",
                    "format": "int64",
                    "description": "get  phone number value"
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "get  email value"
                },
                "latitude": {
                    "type": "string",
                    "format": "string",
                    "description": "get  latitude value"
                },
                "longitude": {
                    "type": "string",
                    "format": "string",
                    "description": "get  longitude value"
                },
                "twitter_url": {
                    "type": "string",
                    "format": "string",
                    "description": "get  twitter url value"
                },
                "facebook_url": {
                    "type": "string",
                    "format": "string",
                    "description": "get  facebook url value"
                },
                "google_plus_url": {
                    "type": "string",
                    "format": "string",
                    "description": "get  google plus url value"
                },
                "venue_service_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "get venue service value"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_active"
                }
            }
        },
        "addCoupon": {
            "type": "object",
            "required": [
                "name",
                "is_flat_discount",
                "discount",
                "code"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "is_flat_discount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_flat_discount"
                },
                "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "discount"
                },
                "code": {
                    "type": "string",
                    "description": "code"
                }
            }
        },
        "Coupon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "modified_at": {
                    "type": "string",
                    "description": "modified_at"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "is_flat_discount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_flat_discount"
                },
                "discount": {
                    "type": "number",
                    "format": "float",
                    "description": "discount"
                },
                "code": {
                    "type": "string",
                    "description": "code"
                }
            }
        },
        "addVenueZone": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "add venuezone name"
                },
                "venue_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add venue id"
                },
                "seat_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add seat_count  for venue zone"
                },
                "is_having_seat_selection": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add having seat selections"
                },
                "is_booking_available": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add having available svg"
                },
                "image": {
                    "type": "string",
                    "description": "add image file name"
                },
                "svg_image": {
                    "type": "string",
                    "description": "add svg image file name"
                }
            }
        },
        "updateVenueZone": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "update venuezone name"
                },
                "venue_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "update venue id"
                },
                "seat_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "update seat_count  for venue zone"
                },
                "is_having_seat_selection": {
                    "type": "integer",
                    "format": "int32",
                    "description": "update having seat selections"
                },
                "is_booking_available": {
                    "type": "integer",
                    "format": "int32",
                    "description": "update having available svg"
                },
                "image": {
                    "type": "string",
                    "description": "add image file name"
                },
                "svg_image": {
                    "type": "string",
                    "description": "add svg image file name"
                }
            }
        },
        "VenueZone": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "seat_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "seat_count"
                }
            }
        },
        "VenueZoneSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "seat_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "seat_count"
                }
            }
        },
        "VenueZoneSectionRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "seat_count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "seat_count"
                }
            }
        },
        "VenueZoneSectionRowSeat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "seat_number": {
                    "type": "string",
                    "description": "seat_number"
                }
            }
        },
        "addSeries": {
            "type": "object",
            "required": [
                "name",
                "slug",
                "is_active"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_active"
                }
            }
        },
        "Series": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "slug": {
                    "type": "string",
                    "description": "slug"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is_active"
                }
            }
        },
        "addOrder": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "name."
                },
                "credit_card_number": {
                    "type": "string",
                    "format": "string",
                    "description": "credit card number value"
                },
                "cvc": {
                    "type": "string",
                    "format": "string",
                    "description": "add cvc."
                },
                "exp_month": {
                    "type": "string",
                    "format": "string",
                    "description": "exp_month"
                },
                "exp_year": {
                    "type": "string",
                    "format": "string",
                    "description": "exp_year."
                },
                "is_saved": {
                    "type": "integer",
                    "format": "int64",
                    "description": "is_saved"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user_id"
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "address1"
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "description": "address"
                },
                "zip_code": {
                    "type": "string",
                    "format": "string",
                    "description": "zip code"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add city"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add country"
                },
                "delivery_method_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add delivery method id"
                },
                "delivery_amount": {
                    "type": "string",
                    "format": "string",
                    "description": "add delivery amount"
                },
                "total_amount": {
                    "type": "string",
                    "format": "string",
                    "description": "add Delivery method"
                },
                "session_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add session id"
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "add email"
                },
                "gift_voucher_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add gift voucher value"
                }
            }
        },
        "order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User ID."
                },
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant ID."
                },
                "order_status_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant  branch ID."
                },
                "address1": {
                    "type": "string",
                    "format": "string",
                    "description": "address"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Restaurant city ID."
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "states order"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Order country"
                },
                "coupon_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "latitude"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "longitude"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "quantity value"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "add price amount"
                },
                "donation_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "add donation amount"
                },
                "total_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "add total amount"
                },
                "delivery_method_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Delivery method id add"
                },
                "delivery_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "add Delivery method"
                },
                "address2": {
                    "type": "string",
                    "format": "string",
                    "description": "add address 2 values"
                },
                "zipcode": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add zipcode value"
                },
                "site_fee": {
                    "type": "number",
                    "format": "double",
                    "description": "add site fee amount"
                },
                "gift_voucher_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add gift voucher value"
                }
            }
        },
        "addNewsletter": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "email"
                }
            }
        },
        "Newsletter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "email"
                }
            }
        },
        "addVenueZonePreview": {
            "type": "object",
            "properties": {
                "venue_zone_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add venue zone value"
                },
                "venue_section_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add venue section value"
                },
                "venue_section_row_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add venue section row value"
                },
                "venue_section_row_seat_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add venue section row seat"
                },
                "image": {
                    "type": "string",
                    "description": "add image file name"
                }
            }
        },
        "VenueZonePreview": {
            "type": "object",
            "properties": {
                "venue_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add venue value"
                },
                "venue_zone_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add venue zone value"
                },
                "venue_section_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add venue section value"
                },
                "venue_section_row_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add venue section row value"
                },
                "venue_section_row_seat_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add venue section row seat"
                }
            }
        },
        "addGiftVoucher": {
            "type": "object",
            "required": [
                "user_id",
                "amount",
                "is_general",
                "from_name",
                "to_name",
                "to_email",
                "message"
            ],
            "properties": {
                "session_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add session value"
                },
                "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "add amount value"
                },
                "is_general": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add general"
                },
                "from_name": {
                    "type": "string",
                    "format": "string",
                    "description": "add form name"
                },
                "to_name": {
                    "type": "string",
                    "format": "string",
                    "description": "add to name value"
                },
                "to_email": {
                    "type": "string",
                    "format": "string",
                    "description": "add email field"
                },
                "message": {
                    "type": "string",
                    "format": "string",
                    "description": "add message value"
                },
                "is_used": {
                    "type": "string",
                    "format": "string",
                    "description": "update is used"
                }
            }
        },
        "GiftVoucher": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add user id"
                },
                "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "add amount value"
                },
                "is_general": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add general"
                },
                "from_name": {
                    "type": "string",
                    "format": "string",
                    "description": "add form name"
                },
                "to_name": {
                    "type": "string",
                    "format": "string",
                    "description": "add to name value"
                },
                "to_email": {
                    "type": "string",
                    "format": "string",
                    "description": "add email field"
                },
                "message": {
                    "type": "string",
                    "format": "string",
                    "description": "add message value"
                },
                "code": {
                    "type": "string",
                    "format": "string",
                    "description": "add code value"
                },
                "is_used": {
                    "type": "string",
                    "format": "string",
                    "description": "update is used"
                }
            }
        },
        "addNewsCategory": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "add name field"
                },
                "is_active": {
                    "type": "string",
                    "format": "string",
                    "description": "add is_active value"
                }
            }
        },
        "NewsCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string",
                    "description": "get id value"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "get name value"
                },
                "slug": {
                    "type": "string",
                    "format": "string",
                    "description": "get slug value"
                },
                "is_active": {
                    "type": "string",
                    "format": "string",
                    "description": "get is_active value"
                }
            }
        },
        "addList": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "add name field"
                }
            }
        },
        "List": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string",
                    "description": "get id value"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "get name value"
                },
                "slug": {
                    "type": "string",
                    "format": "string",
                    "description": "get slug value"
                }
            }
        },
        "addGuest": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "phone",
                "list_id"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "format": "string",
                    "description": "add first_name field"
                },
                "last_name": {
                    "type": "string",
                    "format": "string",
                    "description": "add last_name field"
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "description": "add phone field"
                },
                "list_id": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addGuestLists"
                    }
                }
            }
        },
        "addGuestLists": {
            "type": "object",
            "properties": {
                "list_id": {
                    "type": "integer",
                    "description": "List ID."
                }
            }
        },
        "Guest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string",
                    "description": "get id value"
                },
                "first_name": {
                    "type": "string",
                    "format": "string",
                    "description": "get first_name value"
                },
                "last_name": {
                    "type": "string",
                    "format": "string",
                    "description": "get last_name value"
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "description": "get phone value"
                }
            }
        },
        "addSendInvitation": {
            "type": "object",
            "required": [
                "event_id",
                "event_schedule_id",
                "price_type_id",
                "is_send_to_list",
                "send_to_id"
            ],
            "properties": {
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add event id value"
                },
                "event_schedule_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add event schedule id value"
                },
                "price_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add price type id value"
                },
                "is_send_to_list": {
                    "type": "integer",
                    "format": "int32",
                    "description": "add  value of 0 or 1 whether need to send invitation to list"
                },
                "send_to_id": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addSendToId"
                    }
                }
            }
        },
        "addSendToId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "List or guest ID."
                }
            }
        },
        "SendInvitation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "id"
                },
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "event id"
                },
                "event_scedule_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "event schedule id"
                },
                "price_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "price type id"
                },
                "is_send_to_list": {
                    "type": "integer",
                    "format": "int32",
                    "description": "is send to list"
                },
                "send_to_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "send to id"
                }
            }
        },
        "addOccupation": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "add name field"
                }
            }
        },
        "Occupation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string",
                    "description": "get id value"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "get name value"
                },
                "slug": {
                    "type": "string",
                    "format": "string",
                    "description": "get slug value"
                }
            }
        },
        "addEducation": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "add name field"
                }
            }
        },
        "Education": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string",
                    "description": "get id value"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "get name value"
                },
                "slug": {
                    "type": "string",
                    "format": "string",
                    "description": "get slug value"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "string",
                    "description": "User email"
                },
                "new_password": {
                    "type": "string",
                    "format": "string",
                    "description": "User new password"
                },
                "password": {
                    "type": "string",
                    "format": "string",
                    "description": "User original password"
                },
                "hash": {
                    "type": "string",
                    "format": "string",
                    "description": "User hash"
                }
            }
        },
        "Attachment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "id"
                },
                "class": {
                    "type": "string",
                    "description": "class"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "foreign_id"
                },
                "filename": {
                    "type": "string",
                    "description": "filename"
                },
                "dir": {
                    "type": "string",
                    "description": "dir"
                },
                "mimetype": {
                    "type": "string",
                    "description": "mimetype"
                },
                "filesize": {
                    "type": "integer",
                    "format": "int64",
                    "description": "filesize"
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "description": "height"
                },
                "width": {
                    "type": "integer",
                    "format": "int64",
                    "description": "width"
                },
                "thumb": {
                    "type": "string",
                    "description": "thumb"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "amazon_s3_thumb_url": {
                    "type": "string",
                    "description": "amazon_s3_thumb_url"
                },
                "amazon_s3_original_url": {
                    "type": "string",
                    "description": "amazon_s3_original_url"
                }
            }
        },
        "stats": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string",
                    "format": "string",
                    "description": "count"
                }
            }
        },
        "SalesReport": {
            "type": "object",
            "properties": {
                "quantity": {
                    "type": "string",
                    "format": "string",
                    "description": "quantity"
                },
                "revenue": {
                    "type": "string",
                    "format": "string",
                    "description": "revenue"
                }
            }
        },
        "CapacityReport": {
            "type": "object",
            "properties": {
                "event_zone_id": {
                    "type": "string",
                    "format": "string",
                    "description": "event_zone"
                },
                "price_type": {
                    "type": "string",
                    "format": "string",
                    "description": "price_type"
                },
                "total_quantity": {
                    "type": "string",
                    "format": "string",
                    "description": "total_quantity"
                },
                "sold": {
                    "type": "string",
                    "format": "string",
                    "description": "sold"
                }
            }
        },
        "DemographicReport": {
            "type": "object",
            "properties": {
                "occupation_id": {
                    "type": "string",
                    "format": "string",
                    "description": "occupation_id"
                },
                "education_id": {
                    "type": "string",
                    "format": "string",
                    "description": "education_id"
                },
                "dob": {
                    "type": "string",
                    "format": "string",
                    "description": "dob"
                },
                "gender": {
                    "type": "string",
                    "format": "string",
                    "description": "gender"
                }
            }
        },
        "FinancialReport": {
            "type": "object",
            "properties": {
                "sales_channel": {
                    "type": "string",
                    "format": "string",
                    "description": "sales_channel"
                },
                "delivery_method": {
                    "type": "string",
                    "format": "string",
                    "description": "delivery_method"
                },
                "paymetn_type": {
                    "type": "string",
                    "format": "string",
                    "description": "payment_type"
                }
            }
        },
        "ParticipantReport": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "format": "string",
                    "description": "first_name"
                },
                "last_name": {
                    "type": "string",
                    "format": "string",
                    "description": "last_name"
                },
                "phone": {
                    "type": "string",
                    "format": "string",
                    "description": "phone"
                },
                "price_type_id": {
                    "type": "string",
                    "format": "string",
                    "description": "price_type_id"
                },
                "venue_zone_id": {
                    "type": "string",
                    "format": "string",
                    "description": "venue_zone_id"
                },
                "event_schedule_id": {
                    "type": "string",
                    "format": "string",
                    "description": "event_schedule_id"
                },
                "venue_zone_section_seat_id": {
                    "type": "string",
                    "format": "string",
                    "description": "venue_zone_section_seat_id"
                }
            }
        },
        "VisitorReport": {
            "type": "object",
            "properties": {
                "event_view_id": {
                    "type": "string",
                    "format": "string",
                    "description": "event_view_id"
                }
            }
        },
        "SalesReportDetail": {
            "type": "object",
            "properties": {
                "price_type_id": {
                    "type": "string",
                    "format": "string",
                    "description": "price type"
                },
                "quantity": {
                    "type": "string",
                    "format": "string",
                    "description": "quantity"
                },
                "revenue": {
                    "type": "string",
                    "format": "string",
                    "description": "revenue"
                }
            }
        },
        "price": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                }
            }
        },
        "addCart": {
            "type": "object",
            "required": [
                "user_id",
                "event_id",
                "session_id",
                "venue_zone_section_seat_id",
                "price",
                "gift_voucher_id"
            ],
            "properties": {
                "session_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add session value"
                },
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add event id value"
                },
                "venue_zone_section_seat_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add venue zone section seat id value"
                },
                "price": {
                    "type": "number",
                    "format": "float",
                    "description": "add price value"
                },
                "gift_voucher_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add gift voucher id value"
                },
                "is_donation": {
                    "type": "integer",
                    "format": "int64",
                    "description": "available for donation"
                }
            }
        },
        "Cart": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "user_id"
                },
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "event_id"
                },
                "session_id": {
                    "type": "string",
                    "description": "session_id"
                },
                "venue_zone_section_seat_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "venue_zone_section_seat_id"
                },
                "price": {
                    "type": "number",
                    "format": "float",
                    "description": "price"
                },
                "gift_voucher_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "gift_voucher_id"
                }
            }
        },
        "updateCart": {
            "type": "object",
            "required": [
                "user_id",
                "event_id",
                "session_id",
                "venue_zone_section_seat_id",
                "price",
                "gift_voucher_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add user id value"
                }
            }
        },
        "CreditCard": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Get records  id"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Get records user"
                },
                "card_type": {
                    "type": "string",
                    "description": "Get records  card type"
                },
                "exp_year": {
                    "type": "string",
                    "description": "Get records  exp year"
                },
                "exp_month": {
                    "type": "string",
                    "description": "Get records  exp month"
                },
                "name": {
                    "type": "string",
                    "description": "Get records  name"
                },
                "masked_cc": {
                    "type": "string",
                    "description": "Get records masked cc"
                },
                "card_id": {
                    "type": "string",
                    "description": "Get records card id"
                },
                "customer_id": {
                    "type": "string",
                    "description": "Get records cust"
                }
            }
        },
        "DonationAmounts": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Get records  id"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Created date time."
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Updated data time."
                },
                "amount": {
                    "type": "string",
                    "description": "Get records  amount"
                }
            }
        },
        "addCheckout": {
            "type": "object",
            "required": [
                "session_id"
            ],
            "properties": {
                "session_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add session id value"
                },
                "delivery_method_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "add delivery method value"
                }
            }
        },
        "addVenueService": {
            "type": "object",
            "properties": {
                "service_name": {
                    "type": "string",
                    "description": "Get service name"
                }
            }
        },
        "VenueService": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Get records  id"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Created date time."
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Updated data time."
                },
                "service_name": {
                    "type": "string",
                    "description": "Get service name"
                }
            }
        },
        "Delivarymethod": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Get records  id"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Created date time."
                },
                "price": {
                    "type": "string",
                    "format": "string",
                    "description": "price field get"
                }
            }
        },
        "addEventBest": {
            "type": "object",
            "properties": {
                "session_id": {
                    "type": "string",
                    "format": "string",
                    "description": "add session id"
                },
                "event_zone_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "post records  event_zone_id."
                },
                "event_schedule_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "post records  event_schedule_id."
                },
                "price_type": {
                    "$ref": "#/definitions/addPrice"
                }
            }
        },
        "addPrice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "price type id"
                },
                "price": {
                    "type": "string",
                    "format": "string",
                    "description": "price"
                },
                "tickets": {
                    "type": "string",
                    "format": "string",
                    "description": "tickets"
                }
            }
        },
        "Currencies": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Currencies id"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "name"
                },
                "code": {
                    "type": "string",
                    "format": "string",
                    "description": "code"
                },
                "price": {
                    "type": "string",
                    "format": "string",
                    "description": "price"
                }
            }
        },
        "updateeventschedule": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "format": "string"
                },
                "start_date": {
                    "type": "string",
                    "format": "string"
                },
                "end_date": {
                    "type": "string",
                    "format": "string"
                },
                "venue_opens_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "end_time"
                }
            }
        },
        "EventSchedule": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "event_id": {
                    "type": "string",
                    "format": "string"
                },
                "start_date": {
                    "type": "string",
                    "format": "string"
                },
                "end_date": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}